version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  database:
    image: postgres:15
    container_name: rss_db
    environment:
      POSTGRES_DB: rss_database
      POSTGRES_USER: rss_user
      POSTGRES_PASSWORD: rss_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rss_user -d rss_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rss_backend
    environment:
      DATABASE_URL: postgresql://rss_user:rss_password@database:5432/rss_database
      SECRET_KEY: your-secret-key-change-this-in-production
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rss_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data: